CREATE TABLE DD_PERSON(
    PERSON_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY
    ,FNAME VARCHAR(100) NOT NULL
    ,LNAME VARCHAR(100) NOT NULL
    ,PHONE_NUMBER NUMBER(13) NOT NULL
    ,EMAIL_ID VARCHAR(100) NOT NULL
    ,LOGIN_PWD VARCHAR(200) NOT NULL
    ,PRIMARY KEY (PERSON_ID)
);

CREATE TABLE DD_CUSTOMER (
    CUSTOMER_ID NUMBER
    , DOORDASH_PASS CHAR(1) DEFAULT 'N'
   , PRIMARY KEY (CUSTOMER_ID)
   , FOREIGN KEY (CUSTOMER_ID) REFERENCES DD_PERSON (PERSON_ID) ON DELETE CASCADE
);

CREATE TABLE DD_ZIPCODE_LOOKUP (
    ZIP_CODE NUMBER(10)
    ,CITY VARCHAR(50) NOT NULL 
    ,STATE VARCHAR(30) NOT NULL 
    , PRIMARY KEY (ZIP_CODE)
);

CREATE TABLE DD_ADDRESS_LOOKUP (
    LATITUDE DECIMAL(8,6)
    ,LONGITUDE DECIMAL(9,6)
    ,STREET VARCHAR(100) NOT NULL 
    ,ZIP_CODE NUMBER(10) NOT NULL 
    , PRIMARY KEY (LATITUDE, LONGITUDE)
    , FOREIGN KEY (ZIP_CODE) REFERENCES DD_ZIPCODE_LOOKUP (ZIP_CODE)
);

CREATE TABLE DD_DRIVER (
    DRIVER_ID NUMBER 
    , SSN CHAR(11) NOT NULL UNIQUE
    , GENDER CHAR(2) NOT NULL
    , DATE_OF_BIRTH DATE NOT NULL 
    , DATE_OF_JOIN DATE DEFAULT SYSDATE
    , IS_ACTIVE CHAR(1) DEFAULT 'Y' NOT NULL
    , DESCRIPTION VARCHAR(200) -- QUICK FUN DESCRIPTION ABT HIM / HER
    , DOOR_NO VARCHAR(100)
    , LATITUDE DECIMAL(8,6) NOT NULL 
    , LONGITUDE DECIMAL(9,6) NOT NULL 
    , PRIMARY KEY (DRIVER_ID) 
    , FOREIGN KEY (DRIVER_ID) REFERENCES DD_PERSON (PERSON_ID) ON DELETE CASCADE
    , FOREIGN KEY (LATITUDE, LONGITUDE) REFERENCES DD_ADDRESS_LOOKUP (LATITUDE, LONGITUDE) ON DELETE CASCADE
);

SELECT * FROM DD_PERSON;


CREATE TABLE DD_PROMO_CODE (
    PROMO_CODE VARCHAR(20)
    , EXPIRY_DATE DATE  DEFAULT (SYSDATE + 1)
    , PERCENT DECIMAL(10, 2) NOT NULL
    , MAX_AMOUNT NUMBER
    , PRIMARY KEY (PROMO_CODE)
);

-- dependent on DD_promo_code and DD_CUSTOMER
CREATE TABLE DD_CUSTOMER_GETS_OFFER (
    PROMO_CODE VARCHAR(20)
    , CUSTOMER_ID NUMBER NOT NULL 
    , IS_ACTIVE CHAR(1) DEFAULT 'Y'
    , PRIMARY KEY (PROMO_CODE, CUSTOMER_ID)
    , FOREIGN KEY (PROMO_CODE) REFERENCES DD_PROMO_CODE (PROMO_CODE) ON DELETE CASCADE
    , FOREIGN KEY (CUSTOMER_ID) REFERENCES DD_CUSTOMER (CUSTOMER_ID) ON DELETE CASCADE 
);


SELECT * FROM DD_PROMO_CODE;

CREATE TABLE DD_DRIVER_VEHICLE (
    PLATE_NUMBER VARCHAR(20)
    , DRIVER_ID NUMBER 
    , INSURANCE_NUMBER VARCHAR(50) NOT NULL 
    , LICENSE_NUMBER VARCHAR(50) NOT NULL
    , TYPE VARCHAR(50)
    , COLOR VARCHAR(30)
    , PRIMARY KEY (PLATE_NUMBER, DRIVER_ID)
    , FOREIGN KEY (DRIVER_ID) REFERENCES DD_DRIVER (DRIVER_ID) ON DELETE CASCADE
);  


-- DRIVER BANK DETAILS
CREATE TABLE DD_BANKDETAILS(
    BANK_NAME VARCHAR(100) NOT NULL
    , ROUTING_NUMBER NUMBER(15)  
    , ACCOUNT_NUMBER NUMBER(20) 
    , DRIVER_ID NUMBER 
    , PRIMARY KEY (ACCOUNT_NUMBER, ROUTING_NUMBER)
    , FOREIGN KEY (DRIVER_ID) REFERENCES DD_DRIVER (DRIVER_ID) ON DELETE CASCADE
);



----- payments related table 

CREATE TABLE DD_PAYMENTS(
    PAYMENT_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY
    , ADDED_ON DATE DEFAULT SYSDATE
    , CUSTOMER_ID NUMBER NOT NULL
    , PRIMARY KEY (PAYMENT_ID)
    , FOREIGN KEY (CUSTOMER_ID) REFERENCES DD_CUSTOMER (CUSTOMER_ID) ON DELETE CASCADE
);

-- DROP TABLE DD_PAYMENTS;

CREATE TABLE DD_APPLEPAY (
    PAYMENT_ID NUMBER
    , APPLE_ID VARCHAR(100) NOT NULL UNIQUE
    , PRIMARY KEY (PAYMENT_ID)
    , FOREIGN KEY (PAYMENT_ID) REFERENCES DD_PAYMENTS (PAYMENT_ID) ON DELETE CASCADE
);

CREATE TABLE DD_PAYPAL (
    PAYMENT_ID NUMBER
    , PAYPAL_ID VARCHAR(100) NOT NULL UNIQUE
    , PRIMARY KEY (PAYMENT_ID)
    , FOREIGN KEY (PAYMENT_ID) REFERENCES DD_PAYMENTS (PAYMENT_ID) ON DELETE CASCADE
);

CREATE TABLE DD_CREDITCARD (
    PAYMENT_ID NUMBER
    , CREDIT_CARD_NUMBER VARCHAR(100) NOT NULL
    , CVV NUMBER(4) NOT NULL
    , CC_NAME VARCHAR(100) NOT NULL
    , EXPIRY_DATE DATE NOT NULL
    , PRIMARY KEY (PAYMENT_ID)
    , FOREIGN KEY (PAYMENT_ID) REFERENCES DD_PAYMENTS (PAYMENT_ID) ON DELETE CASCADE
);

CREATE TABLE DD_CUSTOMER_CARE (
    EMP_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY
    , SSN VARCHAR(9) NOT NULL UNIQUE 
    , SALARY NUMBER(6) NOT NULL
    , JOINING_DATE DATE DEFAULT SYSDATE
    , PRIMARY KEY (EMP_ID)
);

CREATE TABLE DD_TICKETS (
    TICKET_NO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY
    , CUSTOMER_ID NUMBER NOT NULL
    , EMP_ID NUMBER NOT NULL
    , DESCRIPTION VARCHAR(100) 
    , STATUS VARCHAR(20) DEFAULT 'PENDING'
    , RAISED_AT DATE DEFAULT SYSDATE 
    , RESOLVED_AT DATE 
    , PRIMARY KEY (TICKET_NO)
    , FOREIGN KEY (CUSTOMER_ID) REFERENCES DD_CUSTOMER (CUSTOMER_ID)
    , FOREIGN KEY (EMP_ID) REFERENCES DD_CUSTOMER_CARE (EMP_ID)
);

CREATE TABLE DD_CUISINE (
    CUISINE_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY
    , TYPE VARCHAR(20) UNIQUE
    , PRIMARY KEY (CUISINE_ID)
);

CREATE TABLE DD_RESTAURANT(
    RESTAURANT_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY
    , NAME VARCHAR(100)
    , PHONE_NUMBER NUMBER(13) NOT NULL 
    , EMAIL_ID VARCHAR(100) NOT NULL     
    , CUISINE_ID NUMBER
    , OPENING_TIME NUMBER(5)
    , CLOSING_TIME NUMBER(5)
    , PRIMARY KEY (RESTAURANT_ID)
    , FOREIGN KEY (CUISINE_ID) REFERENCES DD_CUISINE (CUISINE_ID) ON DELETE SET NULL -- DON'T CASCADE
);

CREATE TABLE DD_ITEMS(
    ITEM_ID NUMBER 
    , ITEM_NAME VARCHAR(100) NOT NULL 
    , RESTAURANT_ID NUMBER NOT NULL 
    , CALORIES NUMBER (4)
    , SERVING_SIZE NUMBER(4)
    , PRICE DECIMAL (10, 5) NOT NULL
    , DESCRIPTION VARCHAR(1000)
    , CATEGORY VARCHAR(10)
    , PRIMARY KEY (ITEM_ID, RESTAURANT_ID)
    , FOREIGN KEY (RESTAURANT_ID) REFERENCES DD_RESTAURANT (RESTAURANT_ID) ON DELETE CASCADE
);

CREATE TABLE DD_RESTAURANT_OWNER (
    SSN VARCHAR(9)
    , RESTAURANT_ID NUMBER
    , NAME VARCHAR(100) NULL
    , EMAIL_ID VARCHAR(100) NOT NULL 
    , PHONE_NUMBER NUMBER(13) NOT NULL 
    , BANK_NAME VARCHAR(100) NOT NULL 
    , ROUTING_NUMBER NUMBER(15)  
    , ACCOUNT_NUMBER NUMBER(20) 
    , PRIMARY KEY (RESTAURANT_ID, SSN)
    , FOREIGN KEY (RESTAURANT_ID) REFERENCES DD_RESTAURANT (RESTAURANT_ID) ON DELETE CASCADE
);

CREATE TABLE DD_ORDERS (
    ORDER_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY
    , ORDER_STATUS VARCHAR(20) DEFAULT 'PENDING'
    , SPECIAL_INSTRUCTIONS VARCHAR(300)
    , DOOR_NO VARCHAR(20) 
    , LATITUDE DECIMAL(8,6)  NOT NULL 
    , LONGITUDE DECIMAL(9,6) NOT NULL 
    , LANDMARK VARCHAR(200)
    , TAX_AMOUNT DECIMAL(8,6) DEFAULT 0.0
    , DRIVER_SHARE DECIMAL(8,6) DEFAULT 0.0
    , TOTAL_COST DECIMAL (10, 6) DEFAULT 0.0
    , DRIVER_TIP DECIMAL (10,6) DEFAULT 0.0
    , DELIVERY_CHARGE DECIMAL(8,6) DEFAULT 0.0
    , PRIMARY KEY (ORDER_ID)
    , FOREIGN KEY (LATITUDE, LONGITUDE) REFERENCES DD_ADDRESS_LOOKUP (LATITUDE, LONGITUDE) ON DELETE SET NULL
);

CREATE TABLE DD_ORDER_ITEMS (
    ORDER_ID NUMBER 
    , ITEM_ID NUMBER NOT NULL
    , RESTAURANT_ID NUMBER NOT NULL
    , QNTY NUMBER (2) NOT NULL 
    , SPECIAL_INSTRUCTIONS VARCHAR(100)
    , PRIMARY KEY (ORDER_ID, ITEM_ID, RESTAURANT_ID)
    , FOREIGN KEY (ITEM_ID, RESTAURANT_ID) REFERENCES DD_ITEMS(ITEM_ID, RESTAURANT_ID) ON DELETE CASCADE
    , FOREIGN KEY (ORDER_ID) REFERENCES DD_ORDERS (ORDER_ID) ON DELETE CASCADE
);

CREATE TABLE DD_CUSTOMER_PLACES_ORDER (
    ORDER_ID NUMBER
    , CUSTOMER_ID NUMBER
    , ORDER_TIME DATE 
    , PRIMARY KEY (ORDER_ID)
    , FOREIGN KEY (CUSTOMER_ID) REFERENCES DD_CUSTOMER (CUSTOMER_ID) ON DELETE CASCADE 
    , FOREIGN KEY (ORDER_ID) REFERENCES DD_ORDERS (ORDER_ID) ON DELETE CASCADE 
);

CREATE TABLE DD_DISCOUNT_APPLIED_FOR_ORDER (
    ORDER_ID NUMBER
    , PROMO_CODE VARCHAR(20) NOT NULL
    , PRIMARY KEY (ORDER_ID)
    , FOREIGN KEY (ORDER_ID) REFERENCES DD_ORDERS (ORDER_ID) ON DELETE CASCADE 
    , FOREIGN KEY (PROMO_CODE) REFERENCES DD_PROMO_CODE (PROMO_CODE) ON DELETE CASCADE 
);

CREATE TABLE DD_ORDER_TRANSACTION (
    ORDER_ID NUMBER
    , PAYMENT_ID NUMBER NOT NULL
    , TNX_REF_NO VARCHAR(100) NOT NULL
    , TNX_TIME DATE DEFAULT SYSDATE
    , PRIMARY KEY (ORDER_ID)
    , FOREIGN KEY (ORDER_ID) REFERENCES DD_ORDERS (ORDER_ID) ON DELETE CASCADE 
    , FOREIGN KEY (PAYMENT_ID) REFERENCES DD_PAYMENTS (PAYMENT_ID) ON DELETE CASCADE 
);

CREATE TABLE DD_DRIVER_PICKSUP_ORDER (
    ORDER_ID NUMBER
    , DRIVER_ID NUMBER NOT NULL
    , PICKUP_TIME DATE 
    , PRIMARY KEY (ORDER_ID)
    , FOREIGN KEY (DRIVER_ID) REFERENCES DD_DRIVER (DRIVER_ID) ON DELETE CASCADE 
    , FOREIGN KEY (ORDER_ID) REFERENCES DD_ORDERS (ORDER_ID) ON DELETE CASCADE
);


CREATE TABLE DD_DRIVER_DELIVERS_TO_CUSTOMER(
    CUSTOMER_ID NUMBER 
    , DRIVER_ID NUMBER NOT NULL 
    , ORDER_ID NUMBER NOT NULL 
    , DELIVERY_TIME DATE DEFAULT SYSDATE
    , RATING NUMBER(1) DEFAULT -1
    , REVIEW VARCHAR(100)
    , PRIMARY KEY (CUSTOMER_ID, DRIVER_ID, ORDER_ID)
    , FOREIGN KEY (DRIVER_ID) REFERENCES DD_DRIVER (DRIVER_ID) ON DELETE CASCADE 
    , FOREIGN KEY (ORDER_ID) REFERENCES DD_ORDERS (ORDER_ID) ON DELETE CASCADE
  , FOREIGN KEY (CUSTOMER_ID) REFERENCES DD_CUSTOMER (CUSTOMER_ID) ON DELETE CASCADE 
);

CREATE TABLE DD_CUSTOMER_GIVES_RATING (
    CUSTOMER_ID NUMBER 
    , RESTAURANT_ID NUMBER 
    , PRIMARY KEY (CUSTOMER_ID, RESTAURANT_ID)
    , RATING NUMBER NOT NULL 
    , REVIEW VARCHAR(200) NOT NULL 
    , FOREIGN KEY (CUSTOMER_ID) REFERENCES DD_CUSTOMER (CUSTOMER_ID) ON DELETE CASCADE 
    , FOREIGN KEY (RESTAURANT_ID) REFERENCES DD_RESTAURANT (RESTAURANT_ID) ON DELETE CASCADE 
);

CREATE TABLE DD_CUSTOMER_FAVOURITES (
    CUSTOMER_ID NUMBER 
    , RESTAURANT_ID NUMBER 
    , PRIMARY KEY (CUSTOMER_ID, RESTAURANT_ID)
    , FOREIGN KEY (CUSTOMER_ID) REFERENCES DD_CUSTOMER (CUSTOMER_ID) ON DELETE CASCADE 
    , FOREIGN KEY (RESTAURANT_ID) REFERENCES DD_RESTAURANT (RESTAURANT_ID) ON DELETE CASCADE 
);